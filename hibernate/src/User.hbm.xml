<?xml version="1.0" encoding="UTF-8"?>
<!--文档说明，设置映射文件  -->
<!DOCTYPE hibernate-mapping
        SYSTEM
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd" >
<!--映射标签
 package：内部类的所在的包名 -->
<hibernate-mapping package="hibernate">
    <!--需要设置的映射类：设置该类对应的表  -->
    <!--属性：
    name:类名
    table:表名  -->
    <class name="User" table="tb_user">
    <!--id:主键，name:属性名称，column：字段名称  -->
        <id name="id" column="id">
            <!--generator:主键生成策略
            class:标记主键如何生成
            取值：
            1、native：自动增长，会根据当前的数据库自动切换
            2、identity：mySQL的自增策略
            3、sequence：Oracle的自增标记
            4、uuid:32位字符串
            5、assigned:自定义字符串
            6、foreign：外键
            7、increment：自己维护自增关系
              -->
            <generator class="native"/>
        </id>
        
        <!-- 复合主键映射 -->
        <!--
        <composite-id name="keys">
            <key-property name="userName" type="string"></key-property>
            <key-property name="address" type="string"></key-property>
        </composite-id>
        -->
        
        <!--配置属性对应的字段  -->
        <property name="name" length="16" column="username" type="string"/>
        <property name="pass" length="32"/>  
        <!-- 
        hibernate类型详解：
        	这里的type类型并不是java本身的类型，也不是sql里本身的类型，而是一个映射关系
        	integer ：	int 或 java.lang.Integer  =》	INTEGER
        	long ：	long 或 java.lang.Long  =》	BIGINT
        	short ：short 或 java.lang.Short  =》	SMALLINT
        	float ：	float 或 java.lang.Float  =》	FLOAT
			double :	double 或 java.lang.Double  =》	DOUBLE
			big_decimal ：	java.math.BigDecimal  =》	NUMERIC
			character ：	java.lang.String  =》	CHAR(1)
			string ：	java.lang.String  =》	VARCHAR
			byte ：	byte 或 java.lang.Byte  =》	TINYINT
			boolean ：	boolean 或 java.lang.Boolean  =》	BIT
			yes/no ：	boolean 或 java.lang.Boolean	  =》 CHAR(1)('Y' or 'N')
			true/false ：	boolean 或 java.lang.Boolean  =》	CHAR(1)('T' or 'F')
			。。。。。、
			date ： java.util.Date 或 java.sql.Date =》	DATE
			time ：	java.util.Date 或 java.sql.Time =》	TIME
			timestamp ： 	java.util.Date 或 java.sql.Timestamp =》	TIMESTAMP
			calendar  ：	java.util.Calendar =》	TIMESTAMP
			calendar_date ：	java.util.Calendar =》	DATE
			。。。。。
         -->
    </class>
</hibernate-mapping>